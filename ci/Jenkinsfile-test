pipeline {
    agent any 
    environment {
        MVN_REPO='http://192.168.205.104:8081'
        MVN_REPO_SNAPSHOT_URL="$MVN_REPO/repository/maven-snapshots/"
        MVN_REPO_RELEASE_URL="$MVN_REPO/repository/maven-releases/"
        MVN_REPO_CENTRAL_URL="$MVN_REPO/repository/maven-central/"
        MVN_REPO_PUBLIC_URL="$MVN_REPO/repository/maven-public/"
    }

    stages {
        stage("Display Parameters") {
            steps {
                echo "BRANCH = ${BRANCH}"
                echo "MVN_REPO_RELEASE_URL = ${MVN_REPO_RELEASE_URL}"
                echo "MVN_REPO_SNAPSHOT_URL = ${MVN_REPO_SNAPSHOT_URL}"
                echo "MVN_REPO_CENTRAL_URL = ${MVN_REPO_CENTRAL_URL}"
                echo "MVN_REPO_PUBLIC_URL = ${MVN_REPO_PUBLIC_URL}"
            }
        }
        stage("Build") {
          steps {
              echo "================== Build Docker image =================="
              script {
              withCredentials([usernamePassword(credentialsId: "nexus", usernameVariable: "MVN_REPO_USERNAME",
               passwordVariable: "MVN_REPO_PASSWORD")]) {
                  docker.image('registry.access.redhat.com/openjdk/openjdk-11-rhel7:latest')
                      .inside("-u root") {
                          stage('build') {
                            sh 'source scl_source enable rh-maven36 && \
                            mvn -s settings.xml -Dmaven.test.skip=true \
                            -Drepo.username=${MVN_REPO_USERNAME} \
                            -Drepo.password=${MVN_REPO_PASSWORD} \
                            -Drepo.snapshot.url=${MVN_REPO_SNAPSHOT_URL} \
                            -Drepo.release.url=${MVN_REPO_RELEASE_URL} \
                            -Drepo.central.url=${MVN_CENTRAL_URL} \
                            clean deploy'
                          }
                      }
                  }
              }

          }
        }
    }
}
